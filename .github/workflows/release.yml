name: Release
on: [push, pull_request]

jobs:
  test:
    name: Test @ PHP ${{ matrix.php-version }} - x86 - ubuntu-latest
    # Support [skip ci] out of box with github actions Workaround
    # Only works for push https://github.com/actions/runner/issues/774
    if: github.event_name == 'pull_request' || (github.event_name == 'push' && contains(toJson(github.event.commits), '[skip ci]') == false)
    strategy:
      matrix:
        php-version:
          - 7.2
      #- 7.3
      #- 7.4
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
  #      - name: Get Composer Cache Directory
  #        id: composer-cache
  #        run: |
  #          echo "::set-output name=dir::$(composer config cache-files-dir)"
  #      - uses: actions/cache@v2
  #        with:
  #          path: ${{ steps.composer-cache.outputs.dir }}
  #          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
  #          restore-keys: |
  #            ${{ runner.os }}-composer-
  #      - name: Install Dependencies::PHP${{ matrix.php-version }}
  #        run: |
  #          echo "$HOME/.composer/vendor/bin" >> $GITHUB_PATH
  #          composer global require dealerdirect/phpcodesniffer-composer-installer roave/security-advisories:dev-master squizlabs/php_codesniffer phpcompatibility/php-compatibility
  #      - name: Check PHP Compatibility
  #        run: phpcs --standard=PHPCompatibility -q -n --colors --runtime-set testVersion ${{ matrix.php-version }} addons servers || exit 1;
  #      - name: Check PSR12 Standard
  #        run: phpcs --standard=PSR12 -q -n --colors addons servers tests
  release:
    name: Release @ NodeJS LTS - x86 - ubuntu-latest
    runs-on: ubuntu-18.04
    needs:
      - test
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    steps:
      - name: Setup NodeJS LTS
        uses: actions/setup-node@v2
      - name: Install dependencies
        run: |
          npm prune
          npm i
          pwd
          ls -altr
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          WHMCSMP_LOGIN: ${{ secrets.WHMCSMP_LOGIN }}
          WHMCSMP_PASSWORD: ${{ secrets.WHMCSMP_PASSWORD }}
          WHMCSMP_PRODUCTID: ${{ secrets.WHMCSMP_PRODUCTID_ISPAPI_SSL }}
        run: npx semantic-release
